<odoo>
    <data noupdate="1">
        <!-- ConfiguraciÃ³n del Cron -->
        <record id="ir_cron_tu_modelo" model="ir.cron">
            <field name="name">Sync horas</field>
            <field name="model_id" ref="softer_asistencias.model_biometric_device_details"/>
            <field name="state">code</field>
            <field name="code">model.cron_sync()</field>
            <field name="interval_number">1</field>
            <field name="interval_type">hours</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>
        <record id="cron_enviar_reporte_asistencias" model="ir.cron">
            <field name="name">Enviar Reporte de Asistencias</field>
            <field name="model_id" ref="hr_attendance.model_hr_attendance"/>
            <field name="state">code</field>
            <field name="code">model.enviar_reporte_asistencias()</field>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="numbercall">-1</field>
            <field name="active" eval="bool(env['ir.config_parameter'].sudo().get_param('asistencias.active', 'False') == 'True')"/>
            <!-- <field name="nextcall" eval="(datetime.datetime.now().replace(hour=int(env['ir.config_parameter'].sudo().get_param('asistencias.horaNotificacionDiaria', '08:00:00').split(':')[0]), minute=int(env['ir.config_parameter'].sudo().get_param('asistencias.horaNotificacionDiaria', '08:00:00').split(':')[1]), second=int(env['ir.config_parameter'].sudo().get_param('asistencias.horaNotificacionDiaria', '08:00:00').split(':')[2])))"/> -->

        </record>
    </data>
</odoo>
